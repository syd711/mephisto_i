{"name":"Mephisto I","tagline":"Building an internet radio with the Arduino Ethernet","body":"# Motivation\r\n\r\nReading several articles on several blogs - especially [hackaday.com](http://hackaday.com/) - about the Arduino and projects realized with the Arduino\r\nI thought it would be fun to build an internet radio on my own too. I'm a software developer with only basic knowledge of hardware.\r\nSo I googled a lot of stuff about Arduino tutorials and other radios that have been build with it. There are three pages that helped\r\nmy to design the hardware architecture of the radio:\r\n\r\n* [tinkernut.com] (http://www.tinkernut.com/2010/08/30/how-to-make-a-cheap-wifi-radio/) - How to make a cheap wifi radio\r\n* [this article] (http://www.instructables.com/id/Standalone-WiFi-Radio-Control-Panel-Arduino-Power/)  about the about an Arduino driven control panel\r\n* [mightyohm.com] (http://mightyohm.com/blog/2008/10/building-a-wifi-radio-part-1-introduction/) - Building a wifi radio\r\n\r\n![finished1](http://www.paderpoint.net/radio/tn_2013-05-27%2018.57.20.jpg)\r\n![display](http://www.paderpoint.net/radio/tn_2013-05-27%2018.59.24.jpg)\r\n\r\n# Hardware Requirements\r\n\r\nHere is the list of components I used building the radio:\r\n\r\n* Arduino Ethernet\r\n* Asus WL520-GU wireless router\r\n* USB audio card\r\n* ethernet cable\r\n* Logitech LS 20 speaker (as amplifier)\r\n* Visaton FRS 8 speaker\r\n* 20x4 blue LCD \r\n* 2x push buttons for next/previous station selection\r\n* Stereo input selector\r\n* iPod audio cable\r\n* some resistors and a relay\r\n* a white rack\r\n* some 5mm wooden panels\r\n* iPod dock adapter\r\n* cinch and 3,5mm connectors\r\n\r\n# Hacking the Asus WL520-GU router\r\n\r\nThere are different descriptions how to hack this router to install a mpd server for mp3 playback on it. I already mentioned the most important\r\nones at the beginning of this article. The basic idea is to install **openWRT** on the router with all the advantages of a Linux system.\r\nUnfortunatly none of the descriptions worked for me. I **really really really(!!!)** spent a lot of time to get openWRT working but was never able to establish a wireless\r\nconnection. I followed the instructions of tinkernut and some other. Finally, I switched to [tomato USB](http://tomatousb.org/) and\r\n found [this thread](http://www.techenclave.com/community/threads/setting-up-a-mp3-player-and-media-streamer-on-a-cheap-router.134452/)\r\nthat helped me to get the router online and running. The original idea included to have an http server with PHP running on the router to support \r\na web interface. But I soon realized that the router does not have the necessary performance to support this kind of feature.\r\n\r\n# Building the hardware: It started with a blink...\r\n\r\nBesides the router and the Arduino, I wasn't sure which components I need to build the radio, so I bought an **Arduino Ethernet Starterkit**.\r\nThere are a lot of good Arduinio tutorials on youtube, so I started with the Blink tutorial:\r\n\r\n![A simple Blink prototype](http://www.paderpoint.net/radio/tn_IMG_6566.JPG)\r\n\r\nThe next step was to connect the LCD with the Arduino. Thanks to [Laday Ada] (http://learn.adafruit.com/character-lcds/wiring-a-character-lcd) that was not problem.\r\nThe router was already running the mpd server, so it didn't took me long to find some tutorial about how to establish a telnet connection and executing some remote\r\ncommands to read the mpd status and update the server using mpc commands. Displaying the current song information on the LCD was easy thanks to the Arduino libraries for that.\r\nBut of course, I ran into some problems too:\r\n* I wasn't able to display **German Umlauts** properly. I tried to set the system encoding to UTF-8 but that doesn't seem to work. Well, I did not bother me that much, so I left the problem unsolved. \r\n* **Scrolling** the actual song information if the character length is > 20: There are some scroll functions coming with the LCD library, but since I only wanted to scroll one line of the four rows\r\nI implemened the scrolling myself\r\n* **Button debouncing**: Well, there are so much threads about that, so I'm gonna skip the details here ;)\r\n\r\n![Wiring the LCD display](http://www.paderpoint.net/radio/tn_IMG_6567.JPG)\r\n\r\n\r\n# Building the hardware: Wiring everything together...\r\n\r\nOk, when you look on the photos and a big **_ARRGGH!_** is coming out your mouth just remember: this was my first hack and I learned a lot about circuit board wiring through that. So yes: it's **ugly**\r\nbut it works :-)\r\n\r\n![A lot of wires](http://www.paderpoint.net/radio/tn_IMG_6571.JPG)\r\n\r\nThe circuit board contains cables for connecting the LCD and the two push buttons for the station selection. The **relay is used as on/off switch for the amplifier**: the front poti volume control\r\nhas an on/off switch. If the radio is switched on, the router is powered. The arduino is powered by the USB port of the router, so the Arduino boots up next. When the init() method of the \r\nArduino is called, the relay is switched and will power the **amp of the former Logitech speakers**. The second switch on the front allows to choose a different input source. I wired an **iPod dock**\r\non the top of the case and a cinch connection on the back to connect alternative music sources. The display does not reflect selector changes and only shows the radio information, even if an iPod is connected.\r\n\r\n![what a mess](http://www.paderpoint.net/radio/tn_IMG_6580.JPG)\r\n\r\n# Building the box: Almost ready...\r\n\r\nAfter hacking the router, finishing the circuit board and programming the Arduino I thought I only have to put everything together....so I thought. But I only reached the famous last 20 percent.\r\nI wanted to put all hardware into a small rack I bought on Amazon, and close the front and back of the rack with 5mm wooden panels. \r\n\r\n![r1](http://www.paderpoint.net/radio/tn_IMG_6578.JPG)\r\n![r1](http://www.paderpoint.net/radio/tn_IMG_6579.JPG)\r\n\r\nInstalling the speakers and the buttons was easy, also to screw the LCD on the front panel. But then I realized that there is not enough space left to put the router into the rack too.\r\nSo I had to re-wire the LCD to save some space, had some loose connections after installing the front panel and also detected some minor software bugs (after!) closing the rack.\r\nBut after all, the radio runs smoothly now and even if it took me a lot of time and nerves, I'm happy about all the stuff I've learned building this radio.\r\n\r\n![r1](http://www.paderpoint.net/radio/tn_IMG_6581.JPG)\r\n![r1](http://www.paderpoint.net/radio/tn_IMG_6582.JPG)\r\n\r\n# Conclusion\r\n\r\nThis was not only my first Arduino hack, but my first hack at all. I learned a lot of stuff and made a lot of mistakes I want to sum up here:\r\n\r\n* Think about the design first: I've chosen the rack since I wanted to have a small radio. Also, I knew that I don't have the room for building a box on my own, but the rack was a poor choice. \r\nI didn't think much about the space the components gonna use. The speaker chambers are not sawed cleanly (bad English?), the one for the LCD too. So I'm not that happy with the visual result after all.\r\n* The circuit board layout: Ok, this was the first time I build a circuit board. So next time I'm gonna think more about board layout before I start wiring.\r\n* Station selection: Meanwhile, I know how to use a rotary encoder and would prefer this component for station selection instead of using two buttons.\r\n* Choosing a router as wifi client: I wouldn't recommend to hack a router like this only to have a wifi client. The price of a **Raspberry Pi** is almost the same like for the router, but \r\nyou get more power and an easier setup. I finished a second radio [Mephisto II](http://syd711.github.io/mephisto_ii/) some month after this one and the power of the Raspi allowed me to provide a nice\r\nweb UI too. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}